apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "staticapp.fullname" . }}
  labels:
    {{- include "staticapp.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "staticapp.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "staticapp.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "staticapp.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: workdir
              mountPath: "/usr/share/nginx/html"
      initContainers:
        - name: replace-secret
          image: busybox:1.28
          command: ["/bin/sh"]
          args:
            - -c
            - >-
                cp /original/index.html /workdir/index.html &&
                sed -i 's/SECRET_MESSAGE/'$REPLACE_VALUE'/g' /workdir/index.html &&
                cat /workdir/index.html &&
                ls /workdir
          env:
          - name: REPLACE_VALUE
            valueFrom:
              secretKeyRef:
                name: secret
                key: secret
          volumeMounts:
            - name: nginx-html
              mountPath: "/original"
            - name: workdir
              mountPath: "/workdir"
      volumes:
      - name: nginx-html
        configMap:
          name: nginx-html
          items:
            - key: index.html
              path: index.html
      - name: workdir
        emptyDir: {}
        
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
              